name: Build
on: [push, pull_request]

jobs:
  build-linux:
    name: Linux + Mac
    runs-on: ubuntu-20.04

    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y autogen libasound2-dev pkg-config make libssl-dev gcc g++ curl wget git libwebkit2gtk-4.0-dev

    - name: Install NodeJS
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8

    - name: Run build script
      run: |
        chmod +x assets/compile-nix.sh
        ./assets/compile-nix.sh
    
    - name: Upload Linux
      uses: actions/upload-artifact@v3
      with:
        name: onetagger-linux
        path: dist/OneTagger-linux.tar.gz
    
    - name: Upload Linux CLI
      uses: actions/upload-artifact@v3
      with:
        name: onetagger-linux-cli
        path: dist/OneTagger-linux-cli.tar.gz

    - name: Upload Mac
      uses: actions/upload-artifact@v3
      with:
        name: onetagger-mac
        path: dist/OneTagger-mac.zip

    - name: Upload Mac CLI
      uses: actions/upload-artifact@v3
      with:
        name: onetagger-mac-cli
        path: dist/OneTagger-mac-cli.zip

  build-win:
    name: Windows
    runs-on: windows-2019
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Install NodeJS
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8

    - name: Install Dependencies
      run: |
        choco install nsis -y

    - name: Build
      run: |
        cd client
        pnpm i
        pnpm run build
        cd ..
        cargo build --release
        
    - name: Bundle
      run: |
        mkdir dist
        powershell -command "(new-object System.Net.WebClient).DownloadFile('https://aka.ms/vs/16/release/vc_redist.x64.exe','vc_redist.x64.exe')"
        &'C:\Program Files (x86)\NSIS\makensis.exe' 'assets\installer.nsi'
        copy target\release\onetagger.exe dist\OneTagger-windows.exe
        copy target\release\onetagger-cli.exe dist\OneTagger-windows-cli.exe

    - name: Upload Archive
      uses: actions/upload-artifact@v3
      with:
        name: onetagger-win
        path: dist/OneTagger-windows.exe
    
    - name: Upload Archive
      uses: actions/upload-artifact@v3
      with:
        name: onetagger-win-setup
        path: dist/OneTagger-windows-setup.exe

    - name: Upload CLI
      uses: actions/upload-artifact@v3
      with:
        name: onetagger-win-cli
        path: dist/OneTagger-windows-cli.exe
      
  build-android:
    name: Android
    runs-on: ubuntu-latest

    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with: 
        flutter-version: '3.10.x'

    - name: Setup Android NDK
      id: setup-ndk
      uses: nttld/setup-ndk@v1
      with:
        ndk-version: r25
        add-to-path: true
    
    - name: Add NDK to ENV
      run: |
        export ANDROID_NDK_HOME="${{ steps.setup-ndk.outputs.ndk-path }}"

    - name: Setup signing
      env:
        KEY_JKS: ${{ secrets.KEY_JKS }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
      run: |
        echo "$KEY_JKS" | base64 -d > android/android/key.jks
        echo "storePassword=$STORE_PASSWORD" >> android/android/key.properties
        echo "keyPassword=$KEY_PASSWORD" >> android/android/key.properties
        echo "keyAlias=$KEY_ALIAS" >> android/android/key.properties
        echo "storeFile=`pwd`/android/android/key.jks" >> android/android/key.properties

    - name: Install dependencies
      run: |
        rustup target add aarch64-linux-android armv7-linux-androideabi i686-linux-android x86_64-linux-android
        cargo install flutter_rust_bridge_codegen
        cargo install cargo-ndk --version 3.2.0

    - name: Build dependencies
      run: |
        cd android
        flutter pub get
        chmod +x build.sh
        ./build.sh
        cd ..
    
    - name: Build APK
      run: |
        cd android
        flutter build apk --release --split-per-abi
        cd ..
    
    - name: Upload arm64
      uses: actions/upload-artifact@v3
      with:
        name: onetagger-android-arm64
        path: android/build/app/outputs/flutter-apk/app-arm64-v8a-release.apk

    - name: Upload arm32
      uses: actions/upload-artifact@v3
      with:
        name: onetagger-android-arm32
        path: android/build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk

    - name: Upload x86_64
      uses: actions/upload-artifact@v3
      with:
        name: onetagger-android-x86_64
        path: android/build/app/outputs/flutter-apk/app-x86_64-release.apk
